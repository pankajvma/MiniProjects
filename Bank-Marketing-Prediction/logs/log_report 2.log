Sample - 5421
without outliers

LogisticRegression() Confusion  matrix:
[[773 181]
 [259 612]]
LogisticRegression() accuracy mean: 0.757219204953362
LogisticRegression() accuracy std dev: 0.016846953541816364
LogisticRegression() preciosn score: 0.7717528373266078
LogisticRegression() recall score: 0.7026406429391504
LogisticRegression() f1 score: 0.7355769230769231

Classification report: 
              precision    recall  f1-score   support

           0       0.75      0.81      0.78       954
           1       0.77      0.70      0.74       871

    accuracy                           0.76      1825
   macro avg       0.76      0.76      0.76      1825
weighted avg       0.76      0.76      0.76      1825

Time taken: 0.26862120628356934
**************************************************
KNeighborsClassifier() Confusion  matrix:
[[723 231]
 [ 15 856]]
KNeighborsClassifier() accuracy mean: 0.8460107554144036
KNeighborsClassifier() accuracy std dev: 0.017031555650009595
KNeighborsClassifier() preciosn score: 0.7874885004599816
KNeighborsClassifier() recall score: 0.9827784156142365
KNeighborsClassifier() f1 score: 0.8743615934627171

Classification report: 
              precision    recall  f1-score   support

           0       0.98      0.76      0.85       954
           1       0.79      0.98      0.87       871

    accuracy                           0.87      1825
   macro avg       0.88      0.87      0.86      1825
weighted avg       0.89      0.87      0.86      1825

Time taken: 1.2956504821777344
**************************************************
SVC(kernel='linear', random_state=0) Confusion  matrix:
[[779 175]
 [262 609]]
SVC(kernel='linear', random_state=0) accuracy mean: 0.757585169271007
SVC(kernel='linear', random_state=0) accuracy std dev: 0.013556012743769318
SVC(kernel='linear', random_state=0) preciosn score: 0.7767857142857143
SVC(kernel='linear', random_state=0) recall score: 0.6991963260619977
SVC(kernel='linear', random_state=0) f1 score: 0.7359516616314199

Classification report: 
              precision    recall  f1-score   support

           0       0.75      0.82      0.78       954
           1       0.78      0.70      0.74       871

    accuracy                           0.76      1825
   macro avg       0.76      0.76      0.76      1825
weighted avg       0.76      0.76      0.76      1825

Time taken: 14.262118101119995
**************************************************
GaussianNB() Confusion  matrix:
[[732 222]
 [330 541]]
GaussianNB() accuracy mean: 0.6898130479456624
GaussianNB() accuracy std dev: 0.02296769427478131
GaussianNB() preciosn score: 0.709043250327654
GaussianNB() recall score: 0.6211251435132032
GaussianNB() f1 score: 0.6621787025703795

Classification report: 
              precision    recall  f1-score   support

           0       0.69      0.77      0.73       954
           1       0.71      0.62      0.66       871

    accuracy                           0.70      1825
   macro avg       0.70      0.69      0.69      1825
weighted avg       0.70      0.70      0.70      1825

Time taken: 0.06393980979919434
**************************************************
DecisionTreeClassifier(criterion='entropy') Confusion  matrix:
[[846 108]
 [  0 871]]
DecisionTreeClassifier(criterion='entropy') accuracy mean: 0.936976073873417
DecisionTreeClassifier(criterion='entropy') accuracy std dev: 0.009699925958511466
DecisionTreeClassifier(criterion='entropy') preciosn score: 0.8896833503575077
DecisionTreeClassifier(criterion='entropy') recall score: 1.0
DecisionTreeClassifier(criterion='entropy') f1 score: 0.9416216216216217

Classification report: 
              precision    recall  f1-score   support

           0       1.00      0.89      0.94       954
           1       0.89      1.00      0.94       871

    accuracy                           0.94      1825
   macro avg       0.94      0.94      0.94      1825
weighted avg       0.95      0.94      0.94      1825

Time taken: 0.28150296211242676
**************************************************
RandomForestClassifier(criterion='entropy', n_estimators=10) Confusion  matrix:
[[893  61]
 [  0 871]]
RandomForestClassifier(criterion='entropy', n_estimators=10) accuracy mean: 0.9587170898997852
RandomForestClassifier(criterion='entropy', n_estimators=10) accuracy std dev: 0.006971468766037678
RandomForestClassifier(criterion='entropy', n_estimators=10) preciosn score: 0.9345493562231759
RandomForestClassifier(criterion='entropy', n_estimators=10) recall score: 1.0
RandomForestClassifier(criterion='entropy', n_estimators=10) f1 score: 0.9661674986134221

Classification report: 
              precision    recall  f1-score   support

           0       1.00      0.94      0.97       954
           1       0.93      1.00      0.97       871

    accuracy                           0.97      1825
   macro avg       0.97      0.97      0.97      1825
weighted avg       0.97      0.97      0.97      1825

Time taken: 0.7080655097961426
**************************************************
GradientBoostingClassifier(learning_rate=1.0) Confusion  matrix:
[[832 122]
 [ 12 859]]
GradientBoostingClassifier(learning_rate=1.0) accuracy mean: 0.9210801451847503
GradientBoostingClassifier(learning_rate=1.0) accuracy std dev: 0.014642494091904004
GradientBoostingClassifier(learning_rate=1.0) preciosn score: 0.8756371049949032
GradientBoostingClassifier(learning_rate=1.0) recall score: 0.9862227324913893
GradientBoostingClassifier(learning_rate=1.0) f1 score: 0.9276457883369331

Classification report: 
              precision    recall  f1-score   support

           0       0.99      0.87      0.93       954
           1       0.88      0.99      0.93       871

    accuracy                           0.93      1825
   macro avg       0.93      0.93      0.93      1825
weighted avg       0.93      0.93      0.93      1825

Time taken: 6.7149529457092285
**************************************************
AdaBoostClassifier() Confusion  matrix:
[[757 197]
 [194 677]]
AdaBoostClassifier() accuracy mean: 0.7789582193517395
AdaBoostClassifier() accuracy std dev: 0.014380721122447794
AdaBoostClassifier() preciosn score: 0.7745995423340961
AdaBoostClassifier() recall score: 0.7772675086107922
AdaBoostClassifier() f1 score: 0.7759312320916905

Classification report: 
              precision    recall  f1-score   support

           0       0.80      0.79      0.79       954
           1       0.77      0.78      0.78       871

    accuracy                           0.79      1825
   macro avg       0.79      0.79      0.79      1825
weighted avg       0.79      0.79      0.79      1825

Time taken: 2.8270859718322754
**************************************************