Sample - Full

Report for LogisticRegression()
LogisticRegression() Confusion  matrix:
[[7831 1744]
 [2279 6475]]

LogisticRegression() accuracy mean: 0.7810211896723046
LogisticRegression() accuracy std dev: 0.006840914961221358
LogisticRegression() preciosn score: 0.7878087358559436
LogisticRegression() recall score: 0.7396618688599498
LogisticRegression() f1 score: 0.7629764920756495
LogisticRegression() AUC: 0.7787604383464239

Classification report: 
              precision    recall  f1-score   support

           0       0.77      0.82      0.80      9575
           1       0.79      0.74      0.76      8754

    accuracy                           0.78     18329
   macro avg       0.78      0.78      0.78     18329
weighted avg       0.78      0.78      0.78     18329

Time taken: 1.446500539779663
**************************************************
Report for KNeighborsClassifier()
KNeighborsClassifier() Confusion  matrix:
[[7448 2127]
 [  77 8677]]

KNeighborsClassifier() accuracy mean: 0.8678053471939837
KNeighborsClassifier() accuracy std dev: 0.005505660530409225
KNeighborsClassifier() preciosn score: 0.8031284709366902
KNeighborsClassifier() recall score: 0.9912040210189628
KNeighborsClassifier() f1 score: 0.887309540852848
KNeighborsClassifier() AUC: 0.8845315144259305

Classification report: 
              precision    recall  f1-score   support

           0       0.99      0.78      0.87      9575
           1       0.80      0.99      0.89      8754

    accuracy                           0.88     18329
   macro avg       0.90      0.88      0.88     18329
weighted avg       0.90      0.88      0.88     18329

Time taken: 95.28679871559143
**************************************************
Report for RandomForestClassifier(criterion='entropy', n_estimators=10)
RandomForestClassifier(criterion='entropy', n_estimators=10) Confusion  matrix:
[[8887  688]
 [   6 8748]]

RandomForestClassifier(criterion='entropy', n_estimators=10) accuracy mean: 0.9561715311709508
RandomForestClassifier(criterion='entropy', n_estimators=10) accuracy std dev: 0.0023162381829063884
RandomForestClassifier(criterion='entropy', n_estimators=10) preciosn score: 0.927087749046206
RandomForestClassifier(criterion='entropy', n_estimators=10) recall score: 0.9993145990404386
RandomForestClassifier(criterion='entropy', n_estimators=10) f1 score: 0.9618471687740516
RandomForestClassifier(criterion='entropy', n_estimators=10) AUC: 0.9637304065698278

Classification report: 
              precision    recall  f1-score   support

           0       1.00      0.93      0.96      9575
           1       0.93      1.00      0.96      8754

    accuracy                           0.96     18329
   macro avg       0.96      0.96      0.96     18329
weighted avg       0.96      0.96      0.96     18329

Time taken: 10.016422510147095
**************************************************
Report for GradientBoostingClassifier(learning_rate=1.0)
GradientBoostingClassifier(learning_rate=1.0) Confusion  matrix:
[[7808 1767]
 [1362 7392]]

GradientBoostingClassifier(learning_rate=1.0) accuracy mean: 0.8233947460006453
GradientBoostingClassifier(learning_rate=1.0) accuracy std dev: 0.005309573433104798
GradientBoostingClassifier(learning_rate=1.0) preciosn score: 0.8070750081886668
GradientBoostingClassifier(learning_rate=1.0) recall score: 0.8444139821795751
GradientBoostingClassifier(learning_rate=1.0) f1 score: 0.8253223915592027
GradientBoostingClassifier(learning_rate=1.0) AUC: 0.8299354506198137

Classification report: 
              precision    recall  f1-score   support

           0       0.85      0.82      0.83      9575
           1       0.81      0.84      0.83      8754

    accuracy                           0.83     18329
   macro avg       0.83      0.83      0.83     18329
weighted avg       0.83      0.83      0.83     18329

Time taken: 168.80262160301208
**************************************************
Report for AdaBoostClassifier()
AdaBoostClassifier() Confusion  matrix:
[[7700 1875]
 [1899 6855]]

AdaBoostClassifier() accuracy mean: 0.7908780696328199
AdaBoostClassifier() accuracy std dev: 0.006069644152580933
AdaBoostClassifier() preciosn score: 0.7852233676975945
AdaBoostClassifier() recall score: 0.7830705962988348
AdaBoostClassifier() f1 score: 0.7841455044612217
AdaBoostClassifier() AUC: 0.7936240709953704

Classification report: 
              precision    recall  f1-score   support

           0       0.80      0.80      0.80      9575
           1       0.79      0.78      0.78      8754

    accuracy                           0.79     18329
   macro avg       0.79      0.79      0.79     18329
weighted avg       0.79      0.79      0.79     18329

Time taken: 48.696184396743774
**************************************************
